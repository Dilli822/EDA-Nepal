@model guestACCESS.eCommerce.ShoppingCart

@using guestACCESS.ClientWeb
@using SharedLib
@using guestACCESS.eCommerce.ProgramSource
@using guestACCESS.eCommerce
@{
    ViewBag.Title = "Order Confirmation";
    Layout = Layout = "~/Views/Shared/_LayoutCatalog.cshtml";
}
@section HeadContent {
    <link href="~/Content/plugins/intlTelInput/intlTelInput.css" rel="stylesheet" />
    <style>
        .contact-infocontainer {
            text-align: left;
        }

        @@media(max-width:768px) {
            .event-content-col {
                margin-bottom: 10px !important;
                border-bottom: 1px solid #eee;
                padding-bottom: 10px;
            }

            .event-title {
                text-align: left;
            }

            .event-content {
                text-align: left;
            }

            /* added on sept 16 2021 */
            .header {
                height: 80px;
                /* updated on sept 23 2021 */
                background-color: #000!important;
            }
        }

        /* overridded on sept 16 2021 **/
        span.select2-selection.select2-selection--single, span.select2-selection.select2-selection--single:active {
        border: 0;
        border-bottom: none!important;
        border-radius: 0;
        }

 
        .pax-title {
            text-align: center;
            font-size: 17px;
        }
        @@media(min-width:1024px) {

            .participantInfo .pax-title {
                display: none;
            }

            .pax-title {
                text-align: unset !important;
            }
        }

        /* added on sept 16 2021 **/

         @@media only screen and (min-width: 767px){
        .cart-btn-contain {
            font-size: 1.5rem;
            margin: 1rem;
            padding: 2.5rem .5rem;
            }
        } 

        /*overrided on sept 16 2021 **/
        @@media only screen and (max-width: 992px){
        .proceed-btn-contain {
            float: right;
            padding: 2rem 0!important;
            }
        }
        
        /* added sept 17 2021 **/
        #footer-selection{
            margin-top: 5rem;
        }

        /* added on sept 17 2021 **/
        @@media only screen and (min-width: 767px){
        #footer-wrapper{
            display: flex;
            justify-content: center;
            border: 0px solid red;
        }
        }

        .header .logo img {
            height: 70px;
            border: 0px solid red;
            /* margin-top: 5px; */
            /* margin-bottom: 5px; */
        }

        .cart-btn{
            color: #fff!important;
        }

        @@media only screen and (max-width: 767px){
            .cart-btn {
                float: none;
                display: inline-block;
                padding: 3rem 0!important;
             }
                .header .logo img {
                    height: 55px!important;
         } }

         #header{
             background-color: #000!important;
         }

         footer{
             padding-bottom: 0!important;
         }

    </style>
}
@section FootContent {
    <script src="~/Content/plugins/intlTelInput/intlTelInput-jquery.min.js"></script>
    <script src="/Content/pageScripts/ec_Summary.js"></script>
    <script type="text/javascript">
        @{var cart = ShoppingCart.GetShoppingCartofCurrentUser();}
        $(document).ready(function () {
            $('.cart-amount').text(@cart.Count);
            Summary.CopyPaxUrl = '@Url.Action("CopyContactInfo", "Summary")';
            Summary.RemoveUrl = "@Url.Action("Remove", "ShoppingCart")";
            Summary.Init();
        });
    </script>
}
@using (Html.BeginForm("CheckOut", "Summary", FormMethod.Post, new { id = "OrderForm" }))
{

    <div class="main">
        <div class="container">
        </div>
    </div>
    <!--BEGIN TOP NAV-->
    <div class="top-nav container">
        <div class="step">
            <!-- Step -->
            <ul class="payment-step text-center clearfix">
                <li class="step-done">
                    <span>1</span>
                    <p>Make Selections</p>
                </li>

                <li class="step-select">
                    <span>2</span>
                    <p>Confirm</p>
                </li>
                <li class="step-select">
                    <span>3</span>
                    <p>Pay</p>
                </li>
            </ul>
            <!-- ENd Step -->
        </div>
        <div class="top-nav-02">
            <span class="summary-title">SUMMARY</span>
            <p>Activities are not confirmed until they are PAID. Please read our Terms and Conditions for more details.</p>
        </div>
    </div>
    <div class="top-nav container">

        <h4 class="summary-title">
            Contact Information
        </h4>
        @if (!SharedLib.Authenticator.MemberTicketManager.Instance.HasAuthenticated)
        {
            @* <p>
                    If you have already registered, please <a href="<%=Url.Action("LogOn", "UserAuth", new { url = "/Summary" }) %>" style="text-decoration: underline;">
                        <i>log in</i></a> first before submitting your order.
                </p>*@
        }
        <div class="contact-infocontainer">
            @{var options = Model.Participants.Select(t => new SelectListItem { Text = guestACCESS.Kernel.Common.NameStyler.Concat(t.FirstName, t.LastName), Value = t.Identifier.ToString() }); }
            @if (options.Count() > 0)
            {
                @*<div class="row">
                        <div class="form-group col-md-6 col-xs-12">
                            <label>Copy Contact Info from Guest</label>
                            <div class="input-group input-group-sm">
                                <%=Html.DropDownList("drpCopyFromPAX", options, "Please select", new { @class = "form-control input-sm" })%>
                                <span class="input-group-btn">
                                    <button type="button" id="btnCopyPAX" class="btn btn-primary btn-sm">Copy</button>
                                </span>
                            </div>
                        </div>
                    </div>*@
            }
            <div class="row">
                <div class="form-group col-md-3 col-xs-6">
                    <label>First Name</label>
                    @Html.TextBoxFor(t => t.MasterContact.FirstName, new { @class = "form-control input-sm" })
                </div>
                <div class="form-group col-md-3 col-xs-6">
                    <label>Last Name</label>
                    @Html.TextBoxFor(t => t.MasterContact.LastName, new { @class = "form-control input-sm" })
                </div>
                <div class="form-group col-md-3 col-xs-6">
                    <label>Email</label>
                    @Html.TextBoxFor(t => t.MasterContact.Email, new { @class = "form-control input-sm" })
                </div>
                <div class="form-group col-md-3 col-xs-6">
                    <label>Mobile Phone</label>
                    @Html.TextBoxFor(t => t.MasterContact.Mobile, new { @class = "form-control input-sm" })
                    <input type="hidden" name="MasterContact.AlphaTwoCode" id="AlphaTwoCode" value="@Model.MasterContact.AlphaTwoCode" />
                </div>
                <div class="form-group col-md-6 col-xs-12">
                    <label>Address</label>
                    @Html.TextBoxFor(t => t.MasterContact.Address, new { @class = "form-control input-sm" })
                </div>
                <div class="form-group col-md-3 col-xs-6">
                    <label>City</label>
                    @Html.TextBoxFor(t => t.MasterContact.City, new { @class = "form-control input-sm" })
                </div>
                <div class="form-group col-md-3 col-xs-6">
                    <label>State</label>
                    @Html.TextBoxFor(t => t.MasterContact.State, new { @class = "form-control input-sm" })
                </div>
                <div class="form-group col-md-3 col-xs-6">
                    <label>Country</label>
                    @Html.TextBoxFor(t => t.MasterContact.Country, new { @class = "form-control input-sm" })
                </div>
                <div class="form-group col-md-3 col-xs-6">
                    <label>ZIP Code</label>
                    @Html.TextBoxFor(t => t.MasterContact.Zip, new { @class = "form-control input-sm" })
                </div>


            </div>
        </div>
    </div>

    <div class="checkout-event container" id="event01">
        @{var cityCache = guestACCESS.DataAccess.CacheRepository.Cache_CityEntity.Instance;
            var eventTypeCache = guestACCESS.DataAccess.CacheRepository.Cache_EventType.Instance;
            var etcd = eventTypeCache.GetCache();
            var selectedEvents = Model.Where(t => t.IsSelected);
            var eventIds = new List<int>();
        }
        @if (selectedEvents.Count() > 0)
        {
            foreach (var i in selectedEvents)
            {
                bool hidePrice = (i is guestACCESS.eCommerce.StandardSource.StandardEvent) && ((guestACCESS.eCommerce.StandardSource.StandardEvent)i).HidePriceInTariff;
               
                <!--BEGIN ROW-->
        <div class="event-row row">
            <!--BEGIN EVENT CONTENT-->
            <div class="event-content-col col-sm-12 col-md-12 col-lg-2 col-xl-2">
                <!--Event Name-->
                @{var isHosted = false;
                    var disableEventBasedDate = false;
                    if (i is ProgramEvent)
                    {
                        isHosted = ((ProgramEvent)i).HostedEvent;
                        eventIds.Add(((ProgramEvent)i).MasterEventId);
                        var eventId = ((ProgramEvent)i).EventId;
                        var eventInfo = new guestACCESS.Kernel.TripManagement.Event(eventId);
                        disableEventBasedDate = eventInfo.DisableDateBasedEvent;
                    }
                }
                <div class="event-title"><span>Name</span></div>
                <div class="event-content"><span>@i.EventName</span><span class="@(isHosted?"red":"non-hosted")">@(isHosted ? " (This is hosted event.No payment is needed)" : "")</span></div>
            </div>
            @if (!disableEventBasedDate)
            {
                <div class="event-content-col col-sm-12 col-md-12 col-lg-2 col-xl-2">
                    <!--Event Date-->
                    <div class="event-title"><span>Date</span></div>
                    <div class="event-content"><span>@SharedLib.Misc.DateTimeFormatter.ConvertToString(i.EventDate)</span></div>
                </div>
            }

            <div class="event-content-col col-sm-12 col-md-12 col-lg-2 col-xl-2">
                <!--Departure Time-->
                <div class="event-title"><span>Type</span></div>
                <div class="event-content"><span>@(etcd.ContainsKey(i.TypeId) ? etcd[i.TypeId].TypeName : "N/A")</span></div>
            </div>
            <div class="event-content-col col-sm-12 col-md-12 col-lg-2 col-xl-2">
                <!--Return Time-->
                <div class="event-title"><span>QTY</span></div>
                <div class="event-content"><span>@i.PAXCount</span></div>
            </div>
            <div class="event-content-col col-sm-12 col-md-12 col-lg-2 col-xl-2">
                <!--Join PAX #-->
                <div class="event-title"><span>Price/Guest</span></div>
                <div class="event-content"><span>@(hidePrice ? "T.B.D" : CurrencyConverter.ToPriceString(i.PricePerPAX))</span></div>
            </div>
            @if (i.GratuityPercentage > 0)
            {
                <div class="event-content-col col-sm-12 col-md-12 col-lg-1 col-xl-1">
                    <!--Join PAX #-->
                    <div class="event-title"><span>Gratuity</span></div>
                    <div class="event-content"><span>@(i.GratuityPercentage.HasValue ? CurrencyConverter.ToPriceString(i.TotalSellPrice * i.GratuityPercentage.Value / 100M) : "N/A")</span></div>
                </div>
            }
            <div class="event-content-col col-sm-12 col-md-12 col-lg-1 col-xl-1 text-center">
                <!--Join PAX #-->
                <button type="button" data-identifier="@i.Identifier" class="quiet-btn btn-danger" onclick="Summary.Remove(this)"> Remove</button>
            </div>
        </div>
                <!--END ROW-->
                if (i is ProgramEvent)
                {
                    List<ParticipantRecord> pr = new List<ParticipantRecord>();
                    var participantInfo = ((ProgramEvent)i).Participants;
                    foreach (var item in participantInfo)
                    {
                        var pd = Model.Participants[item.Key];
                        pr.Add(pd);
                    }

                     int px = 1;
                    <!--BEGIN EVENT CONTENT-->
                                foreach (var participant in participantInfo)
                                {
                                    var paxClass = px > 1 ? "participantInfo" : "";
                        <div class="event-row row @paxClass ">
                            @{var participantDetail = Model.Participants[participant.Key];
                            }
                            <div class="event-content-col col-sm-12 col-md-12 col-lg-2 col-xl-2">
                                <!--Departure Time-->
                                <div class="pax-title PAX-name"><span>Guest Name</span></div>

                                <div class="event-content PAX-name"><span>@guestACCESS.Kernel.Common.NameStyler.Concat(participantDetail.FirstName, participantDetail.LastName)</span></div>
                            </div>


                            <div class="event-content-col col-sm-12 col-md-12 col-lg-2 col-xl-2">
                                <!--Departure Time-->
                                <div class="pax-title"><span>Email</span></div>

                                <div class="event-content"><span>@(participantDetail.Email ?? "N/A")</span></div>
                            </div>

                            <div class="event-content-col col-sm-12 col-md-12 col-lg-2 col-xl-2">
                                <div class="pax-title"><span>Phone</span></div>

                                <div class="event-content"><span>@(participantDetail.Mobile ?? "N/A")</span></div>
                            </div>
                            <div class="event-content-col col-sm-12 col-md-12 col-lg-2 col-xl-2">
                                <div class="pax-title"><span># Participant</span></div>

                                <div class="event-content"><span> @participant.Value</span></div>

                            </div>

                            @if (pr.Any(x => x.ATime.HasValue))
                            {
                            <div class="event-content-col col-sm-12 col-md-12 col-lg-2 col-xl-2">
                                <div class="pax-title"><span>Arrival Info</span></div>

                                <div class="event-content">
                                    <span>

                                        @(participantDetail.AAirport ?? "N/A")
                                        @if (string.IsNullOrEmpty(participantDetail.AAirline) || string.IsNullOrEmpty(participantDetail.AFlightNumber))
                                        {
                                            @Html.Raw("N/A")
                                        }
                                        else
                                        {
                                            @participantDetail.AAirline@participantDetail.AFlightNumber
                                        }
                                        @SharedLib.Misc.DateTimeFormatter.ConvertToString(participantDetail.ATime, "N/A", SharedLib.Misc.DateTimeFormatter.Style4)

                                    </span>
                                </div>

                            </div>
                            }

                            @if (pr.Any(x => x.DTime.HasValue))
                            {
                            <div class="event-content-col col-sm-12 col-md-12 col-lg-2 col-xl-2">
                                <div class="pax-title"><span>Departure Info</span></div>

                                <div class="event-content">
                                    <span>

                                        @(participantDetail.DAirport ?? "N/A")
                                        @if (string.IsNullOrEmpty(participantDetail.DAirline) || string.IsNullOrEmpty(participantDetail.DFlightNumber))
                                        {
                                            @Html.Raw("N/A")
                                        }
                                        else
                                        {
                                            @participantDetail.DAirline@participantDetail.DFlightNumber
                                        }
                                        @SharedLib.Misc.DateTimeFormatter.ConvertToString(participantDetail.DTime, "N/A", SharedLib.Misc.DateTimeFormatter.Style4)

                                    </span>
                                </div>

                            </div>
                            }
                        </div>
                                        px++;
                                    }



                                }
                <div class="total-row row">
                    <div class="event-content-col col-sm-12 col-lg-10">
                    </div>
                    <div class="event-content-col col-sm-12 col-lg-2">
                        <div class="event-total-title">TOTAL:</div>
                        <div class="event-total">@(hidePrice?"T.B.D":CurrencyConverter.ToPriceString(i.TotalSellPrice))</div>
                    </div>
                </div>
            }
        }
    </div>

    <div class="container">
        <div class="row">
            <div class="col-sm-12">
                <div class="total-right">
                    @{decimal totalPrice = Model.GetTotalPrice(), gratuity = Model.GetGratuity(), totalWGratuity = totalPrice + gratuity; }

                    <p>TOTAL: : @CurrencyConverter.ToPriceString(totalPrice)</p>
                    @if (gratuity > 0)
                    {
                        <p>GRATUITY TOTAL:  @CurrencyConverter.ToPriceString(gratuity)</p>
                    }
                    @{var miscItemList = new guestACCESS.ClientWeb.Models.SupplyMiscCharge();
                        decimal taxTotal = 0, serviceTotal = 0, adminFeeTotal = 0;
                    }
                    @if (eventIds.Count > 0)
                    {
                        var miscChargeItems = miscItemList.LoadData(eventIds.ToArray());
                        foreach (var eventModel in Model)
                        {
                            var eventInfo = (ProgramEvent)eventModel;
                            taxTotal += miscChargeItems.Where(a => a.EventId == eventInfo.MasterEventId).Sum(a => a.TaxPercent / 100) * eventInfo.PricePerPAX * eventInfo.PAXCount;
                            serviceTotal += miscChargeItems.Where(a => a.EventId == eventInfo.MasterEventId).Sum(a => a.ServicePercent / 100) * eventInfo.PAXCount * eventInfo.PricePerPAX;
                            adminFeeTotal += miscChargeItems.Where(a => a.EventId == eventInfo.MasterEventId).Sum(a => a.AdministrativePercent / 100) * eventInfo.PAXCount * eventInfo.PricePerPAX;
                        }
                    }
                    @if (taxTotal > 0)
                    {
                        <p>Tax :@CurrencyConverter.ToPriceString(taxTotal)</p>
                    }

                    @if (serviceTotal > 0)
                    {
                        <p>Service Fee :@CurrencyConverter.ToPriceString(serviceTotal)</p>
                    }


                    @if (adminFeeTotal > 0)
                    {
                        <p>Admin Fee :@CurrencyConverter.ToPriceString(adminFeeTotal)</p>
                    }

                    <p>GRAND TOTAL: @CurrencyConverter.ToPriceString(totalWGratuity + taxTotal + adminFeeTotal + serviceTotal))</p>
                </div>
            </div>

        </div>

        <div class="row">
            @if (totalPrice > 0)
            {
                <div class="col-sm-12 col-lg-12">
                    <p class="text-center">
                        * An additional @SharedLib.Misc.DecimalFormatter.Strategy.Parse(WebConfigValues.CreditCardProcessingFeeRate * 100)% of the total price (@CurrencyConverter.ToPriceString(totalPrice * WebConfigValues.CreditCardProcessingFeeRate),
                        Not included in the total price shown) will be charged if payment is made online by credit card.
                    </p>
                </div>
            }
            <div class="col-sm-12 col-lg-6">
                <!--BEGIN CHECKOUT BUTTON-->
                <div class="cancel-btn-contain">
                    <a href="#" onclick="javascript:window.history.back();" class="cancel-btn">Back to Selection</a>
                </div>
                <!--END CHECKOUT BUTTON-->
            </div>
            <div class="col-sm-12 col-lg-6">
                <!--BEGIN CHECKOUT BUTTON-->
                <div class="proceed-btn-contain">
                    <input name="AgreeToTerms" type="checkbox" class="flat-checkbox" value="true">
                    I agree to the @Html.ActionLink("Terms & Conditions", "TermsAndConditions", new { controller = "Static" }, new { target = "_blank" })
                    <button type="submit" class="proceed-btn" id="sbmtbtn">
                        <span class="fa fa-arrow-right"></span>
                        Confirm &amp; Proceed
                    </button>
                </div>
                <!--END CHECKOUT BUTTON-->
            </div>
        </div>
    </div>

}
