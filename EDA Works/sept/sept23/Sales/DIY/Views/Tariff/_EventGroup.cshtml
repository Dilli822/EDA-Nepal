@model guestACCESS.ClientWeb.Models.EventGroupModel
@using guestACCESS.WebCommon
@using SharedLib
@using guestACCESS.ClientWeb
@using guestACCESS.eCommerce
@using guestACCESS.eCommerce.ProgramSource
@{
    var cart = ShoppingCart.GetShoppingCartofCurrentUser();
    var eventTypes = ViewData["EventTypes"] as Dictionary<int, guestACCESS.DataAccess.Entity.T_GASDataEventType>;
    var trip = new guestACCESS.Kernel.TripManagement.Trip(Model.EventEntity.TripId);
}
<!--Video Slide MOdal-->
<div class="modal" id="EventGroupModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <!--BEGIN POP-UP HEADER-->
            <div class="modal-header">
                <h4 class="modal-title">@Model.EventEntity.EventName</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <!--END POP-UP HEADER-->
            <!--BEGIN POP-UP BODY-->
            <div class="modal-body">
                <div class="event-slide">
                    <div class="owl-carousel owl-theme">
                        @{var customizedMedia = Model.EventEntity.CustomizedEventMedia.Where(a => a.MediaType == MediaType.Image || a.MediaType == MediaType.Video);
                        }
                        @foreach (var m in customizedMedia.OrderBy(a => a.MediaType))
                        {
                            if (m.MediaType == MediaType.Image)
                            {
                                string tempImg = HelperExtensions.ParseImagePath(m.MediaContent);

                                <div class="item">
                                    <img src="@tempImg" />
                                </div>
                            }
                            else
                            {
                                if (!string.IsNullOrEmpty(m.MediaContent))
                                {
                                    var source = SharedLib.Html.HtmlHelper.GetSourceFromIframe(m.MediaContent);
                                    <div class="item-video">
                                        <a class="owl-video" href="@source"></a>
                                    </div>
                                }
                            }
                        }
                    </div>
                </div>
                <div class="modal-event-list">
                    <h4>Options </h4>
                    <ul class="event-options">
                        @{var eventItems = Model.GetListByEventGroup(); }
                        @foreach (var events in eventItems)
                        {

                            var addedEvent = cart.GetAddedEvent(events.EventId, true);

                            <li>
                                <a class="eo-item eoi-event" data-eventid="@events.EventId" onclick="Tariff.viewEventMore(this)">
                                    @events.EventName
                                    @if (events.HostedEvent)
                                    {
                                        <span class='red'>(This is a hosted event. No Payment needed)</span>
                                    }
                                </a>
                                <span class="eo-item eoi-date">
                                    @Html.RenderDateTimeRange(addedEvent == null ? events.EventDate : addedEvent.EventDate, addedEvent == null ? events.EventEndDate : addedEvent.EventEndDate, SharedLib.Misc.DateTimeFormatter.DefaultStyle)

                                    @Html.RenderDateTimeRange(addedEvent == null ? events.DepartureTime : addedEvent.DepartureTime, addedEvent == null ? events.ReturnTime : addedEvent.ReturnTime, SharedLib.Misc.DateTimeFormatter.Style2, "All day")

                                </span>
                                <span class="eo-item eoi-guest">
                                    @if (addedEvent != null)
                                    {
                                        @(events.PaxCount+" Guest(s)")
                                    }
                                    else if (trip.ShowInventory)
                                    {
                                        @(events.Inventory.AvailableInventory +" stock left")
                                    }
                                </span>
                                <span class="eo-item eoi-usd">
                                    <i class="fa fa-money"></i>
                                    @CurrencyConverter.ToPriceString(events.HostedEvent ? 0 : (addedEvent == null ? (events.PricePerPax ?? 0) : addedEvent.PricePerPAX))
                                </span>
                                @if (addedEvent == null)
                                {
                                    <a class="eo-item eoi-btn btn btn-primary btn-sm right" data-eventid="@events.EventId" onclick="Tariff.JoinEvent(this)">
                                        <span class="fa fa-cart-plus"></span>
                                        Book
                                    </a>
                                }
                                else
                                {
                                    <a class=" btn btn-primary btn-sm right" data-identifier="@addedEvent.Identifier" onclick="Tariff.EditEvent(this)">
                                        Edit
                                    </a>
                                    <a class="btn btn-danger btn-sm right" data-identifier="@addedEvent.Identifier" onclick="Tariff.Remove(this)">
                                        Quit
                                    </a>
                                }
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <!--END POP-UP BODY-->
        </div>
    </div>
</div>
<!--end Video slide modal-->
                        }
